import{_ as s,c as n,a2 as e,o as p}from"./chunks/framework.DPDg7N6I.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"pages/linux/typecho.md","filePath":"pages/linux/typecho.md"}'),t={name:"pages/linux/typecho.md"};function i(o,a,c,l,h,d){return p(),n("div",null,a[0]||(a[0]=[e(`<h2 id="换域名后-typecho-的设置-typecho-忘记密码" tabindex="-1">换域名后 typecho 的设置，typecho 忘记密码. <a class="header-anchor" href="#换域名后-typecho-的设置-typecho-忘记密码" aria-label="Permalink to &quot;换域名后 typecho 的设置，typecho 忘记密码.&quot;">​</a></h2><ol><li>PhpAdmin 登录进去 或者其他方式进入数据库</li><li>进入 typecho 的数据库</li><li>typecho_users password uid1</li><li>uid1 的 password 改为<code>e10adc3949ba59abbe56e057f20f883e</code></li><li>这时候密码就是<code>123456</code>了</li></ol><h2 id="typecho-更换域名后修改文章和图片链接" tabindex="-1">typecho 更换域名后修改文章和图片链接 <a class="header-anchor" href="#typecho-更换域名后修改文章和图片链接" aria-label="Permalink to &quot;typecho 更换域名后修改文章和图片链接&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>UPDATE databases.typecho_options SET value = &#39;新域名&#39; WHERE typecho_options.name = &#39;siteUrl&#39; AND typecho_options.user =0;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>UPDATE typecho_contents SET text = REPLACE(text, &#39;老域名&#39;, &#39;新域名&#39;) WHERE INSTR(text,&#39;老域名&#39;) &gt; 0;</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">注释</p><ul><li>databases 数据库名</li><li>typecho_options = 表名，有的人表头不一样，需要修改，如 abc_options</li><li>typecho_contents 同 typecho_options</li></ul></div><h2 id="typecho-添加文章-502" tabindex="-1">typecho 添加文章 502 <a class="header-anchor" href="#typecho-添加文章-502" aria-label="Permalink to &quot;typecho 添加文章 502&quot;">​</a></h2><p>将 ngnix 配置 502 的页面改成 <a href="https://blog.wingblog.top/admin/manage-posts.php" target="_blank" rel="noreferrer">https://blog.wingblog.top/admin/manage-posts.php</a> 管理页面</p><h2 id="部署-typecho-nginx-相关的配置" tabindex="-1">部署 typecho nginx 相关的配置 <a class="header-anchor" href="#部署-typecho-nginx-相关的配置" aria-label="Permalink to &quot;部署 typecho nginx 相关的配置&quot;">​</a></h2><p>(1) 新建 <code>enable-php-typecho.conf</code> 内容如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>location ~ .*\\.php(\\/.*)*$</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>try_files $uri =404;</span></span>
<span class="line"><span>fastcgi_pass unix:/tmp/php-cgi-56.sock;</span></span>
<span class="line"><span>fastcgi_index index.php;</span></span>
<span class="line"><span>include fastcgi.conf;</span></span>
<span class="line"><span>include pathinfo.conf;</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>(2) 新建 <code>typecho2.conf</code> 内容如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>location / {</span></span>
<span class="line"><span>    if (!-e $request_filename) {</span></span>
<span class="line"><span>        rewrite ^(.*)$ /index.php/$1 last;</span></span>
<span class="line"><span>   }</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>(3)在 nignx 的配置文件中添加</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>#PHP-INFO-START  PHP引用配置，可以注释或修改</span></span>
<span class="line"><span># include enable-php-56.conf;</span></span>
<span class="line"><span>include typecho2.conf;</span></span>
<span class="line"><span>include enable-php-typecho.conf;</span></span></code></pre></div>`,14)]))}const g=s(t,[["render",i]]);export{u as __pageData,g as default};
