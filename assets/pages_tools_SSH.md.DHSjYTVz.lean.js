import{_ as a,c as i,a2 as e,o as n}from"./chunks/framework.DPDg7N6I.js";const u=JSON.parse('{"title":"SSH 免密连接 Linux","description":"","frontmatter":{},"headers":[],"relativePath":"pages/tools/SSH.md","filePath":"pages/tools/SSH.md"}'),t={name:"pages/tools/SSH.md"};function l(p,s,h,o,d,c){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="ssh-免密连接-linux" tabindex="-1">SSH 免密连接 Linux <a class="header-anchor" href="#ssh-免密连接-linux" aria-label="Permalink to &quot;SSH 免密连接 Linux&quot;">​</a></h1><h2 id="生成-ssh-公钥" tabindex="-1">生成 SSH 公钥 <a class="header-anchor" href="#生成-ssh-公钥" aria-label="Permalink to &quot;生成 SSH 公钥&quot;">​</a></h2><p>此步骤仅在你电脑未生成公钥时使用</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsa</span></span></code></pre></div><p>有时候生成的秘钥里是以 OPENSSL 开头的，如果想生成 RSA 开头的，需要指定格式为 PEM</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsa</span></span></code></pre></div><h2 id="服务器配置" tabindex="-1">服务器配置 <a class="header-anchor" href="#服务器配置" aria-label="Permalink to &quot;服务器配置&quot;">​</a></h2><ul><li>拷贝本机 .ssh/id_rsa.pub 里的内容到服务器 .ssh/authorized_keys 文件中 (进入此用户的.ssh 目录，将生成的公钥文件(默认为 id_rsa.pub)内容添加到与 sshd_config 中 AuthorizedKeysFile 设置项一样的文件(authorized_keys)中,如果没有.ssh 建立 .ssh 文件夹，赋权-R 700) <a href="https://www.cnblogs.com/lykyl/archive/2011/03/10/1980304.html" target="_blank" rel="noreferrer">参考</a></li></ul><h2 id="本机配置服务器-ip-别名" tabindex="-1">本机配置服务器 IP 别名 <a class="header-anchor" href="#本机配置服务器-ip-别名" aria-label="Permalink to &quot;本机配置服务器 IP 别名&quot;">​</a></h2><ul><li><strong>创建 .ssh/config 文件</strong></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cd .ssh/</span></span>
<span class="line"><span>touch config</span></span>
<span class="line"><span>vim config</span></span></code></pre></div><ul><li><strong>在 config 文件中加入类似如下配置：</strong></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Host               ali     //别名</span></span>
<span class="line"><span>HostName           106.15.199.100  //服务器 IP</span></span>
<span class="line"><span>Port               28    //ssh 端口</span></span>
<span class="line"><span>User               root   //登录用户</span></span>
<span class="line"><span>IdentityFile       ~/.ssh/id_rsa   //私钥  600权限</span></span></code></pre></div><p>此时在本机就可以使用以下命令免密登录了。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ssh ali</span></span></code></pre></div><h2 id="ssh-连接的两种方式" tabindex="-1">SSH 连接的两种方式 <a class="header-anchor" href="#ssh-连接的两种方式" aria-label="Permalink to &quot;SSH 连接的两种方式&quot;">​</a></h2><ol><li>把客户端公钥放到服务端<code>authorized_keys</code></li><li>在服务端生成公钥私钥后，将服务端的公钥放到服务端的<code>authorized_keys</code>后，将服务端的私钥放到客户端，可用以下方式连接</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [服务端私钥] root@xxx</span></span></code></pre></div><h2 id="github-配置公钥后clone显示没权限" tabindex="-1">Github 配置公钥后clone显示没权限 <a class="header-anchor" href="#github-配置公钥后clone显示没权限" aria-label="Permalink to &quot;Github 配置公钥后clone显示没权限&quot;">​</a></h2><ol><li>编辑 SSH 配置文件：</li></ol><p>打开或创建 ~/.ssh/config 文件(权限655)，并添加以下内容：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Host github.com</span></span>
<span class="line"><span>  Hostname ssh.github.com</span></span>
<span class="line"><span>  Port 443</span></span>
<span class="line"><span>  User git</span></span>
<span class="line"><span>  IdentityFile ~/.ssh/id_rsa</span></span></code></pre></div>`,22)]))}const g=a(t,[["render",l]]);export{u as __pageData,g as default};
