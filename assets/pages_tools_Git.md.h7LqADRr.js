import{_ as s,c as i,a2 as e,o as t}from"./chunks/framework.DPDg7N6I.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"pages/tools/Git.md","filePath":"pages/tools/Git.md"}'),n={name:"pages/tools/Git.md"};function l(p,a,h,o,d,r){return t(),i("div",null,a[0]||(a[0]=[e(`<blockquote><p>Git 的一些常用命令和参考学习资料</p></blockquote><p><a href="https://www.aliyundrive.com/drive/folder/5fbdc9942244793fd64a443fb69a62c2d77050ea" target="_blank" rel="noreferrer">常用命令参考 1</a><a href="https://segmentfault.com/a/1190000007497383" target="_blank" rel="noreferrer">常用命令参考 2</a><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noreferrer">学习 Git 阮一峰</a><a href="https://progit.bootcss.com/#_remote_repos" target="_blank" rel="noreferrer">学习 Git Bootstrap</a><a href="https://blog.zengrong.net/post/1746.html" target="_blank" rel="noreferrer">远程操作参考</a></p><h2 id="rebase" tabindex="-1">rebase <a class="header-anchor" href="#rebase" aria-label="Permalink to &quot;rebase&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [feature-branch-rebase]  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#current in feature-branch.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [feature-branch-rebase]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rebase</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [commit-id-这个分支的多次提交的前一个]#将本地的多次提交合并为一个，以简化提交历史。本地有多个提交时,如果不进行这一步,在git rebase master时会多次解决冲突(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">最坏情况下,每一个提交都会相应解决一个冲突</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rebase</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  #current in feature-branch-rebase.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2.resolve conflict</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3. commit file to stage</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 4. continue</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rebase</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --continue</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> merge</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feature-branch-rebase</span></span></code></pre></div><h2 id="查看远程仓库信息" tabindex="-1">查看远程仓库信息 <a class="header-anchor" href="#查看远程仓库信息" aria-label="Permalink to &quot;查看远程仓库信息&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git remote -v</span></span></code></pre></div><h2 id="本地库关联远程库" tabindex="-1">本地库关联远程库 <a class="header-anchor" href="#本地库关联远程库" aria-label="Permalink to &quot;本地库关联远程库&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git remote add origin git@github.com:nanfei9330/learngit.git</span></span></code></pre></div><h2 id="查看所有分支-本地加远程" tabindex="-1">查看所有分支（本地加远程） <a class="header-anchor" href="#查看所有分支-本地加远程" aria-label="Permalink to &quot;查看所有分支（本地加远程）&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git branch -a</span></span></code></pre></div><h2 id="查看远程分支" tabindex="-1">查看远程分支 <a class="header-anchor" href="#查看远程分支" aria-label="Permalink to &quot;查看远程分支&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git branch -r</span></span></code></pre></div><h2 id="拉取远程分支到本地分支" tabindex="-1">拉取远程分支到本地分支 <a class="header-anchor" href="#拉取远程分支到本地分支" aria-label="Permalink to &quot;拉取远程分支到本地分支&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git checkout -b 本地分支名 origin/远程分支名</span></span></code></pre></div><h2 id="推送本地分支到远程分支" tabindex="-1">推送本地分支到远程分支 <a class="header-anchor" href="#推送本地分支到远程分支" aria-label="Permalink to &quot;推送本地分支到远程分支&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git push origin 本地分支名:远程分支名</span></span></code></pre></div><h2 id="删除远程分支" tabindex="-1">删除远程分支 <a class="header-anchor" href="#删除远程分支" aria-label="Permalink to &quot;删除远程分支&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git push origin --delete [name]</span></span></code></pre></div><h2 id="版本" tabindex="-1">版本 <a class="header-anchor" href="#版本" aria-label="Permalink to &quot;版本&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git checkout 234ab5</span></span>
<span class="line"><span>git reset --hard 534iu4</span></span></code></pre></div><h2 id="分支" tabindex="-1">分支 <a class="header-anchor" href="#分支" aria-label="Permalink to &quot;分支&quot;">​</a></h2><h2 id="创建" tabindex="-1">创建 <a class="header-anchor" href="#创建" aria-label="Permalink to &quot;创建&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git chekout -b dev   // -b 创建并进入</span></span></code></pre></div><h2 id="切换分支" tabindex="-1">切换分支 <a class="header-anchor" href="#切换分支" aria-label="Permalink to &quot;切换分支&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git chekout dev</span></span></code></pre></div><h2 id="合并分支" tabindex="-1">合并分支 <a class="header-anchor" href="#合并分支" aria-label="Permalink to &quot;合并分支&quot;">​</a></h2><ul><li><strong>正常合并</strong></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git merge dev    //当前分支合并 dev 分支</span></span></code></pre></div><ul><li><strong>--no-ff 合并</strong> --no-ff 禁用 Fast forward 模式在 merge 时生成一个新的 commit，这样，从分支历史上就可以看出分支信息</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git merge --no-ff -m &quot;merge with no-ff&quot; dev</span></span></code></pre></div><h2 id="删除分支" tabindex="-1">删除分支 <a class="header-anchor" href="#删除分支" aria-label="Permalink to &quot;删除分支&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git branch -d dev   // -D 强制删除</span></span></code></pre></div><h2 id="push-本地分支到远程" tabindex="-1">push 本地分支到远程 <a class="header-anchor" href="#push-本地分支到远程" aria-label="Permalink to &quot;push 本地分支到远程&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git push origin dev</span></span></code></pre></div><h2 id="查看记录-log" tabindex="-1">查看记录 log <a class="header-anchor" href="#查看记录-log" aria-label="Permalink to &quot;查看记录 log&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git log --graph --pretty=oneline --abbrev-commit</span></span></code></pre></div><blockquote><p>将当前分支的修改状态存储起来，存储后使得工作区是干净的，就可以 pull 最新代码。</p></blockquote><h2 id="存储" tabindex="-1">存储 <a class="header-anchor" href="#存储" aria-label="Permalink to &quot;存储&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git stash</span></span></code></pre></div><h2 id="查看" tabindex="-1">查看 <a class="header-anchor" href="#查看" aria-label="Permalink to &quot;查看&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git stash list</span></span></code></pre></div><h2 id="取出" tabindex="-1">取出 <a class="header-anchor" href="#取出" aria-label="Permalink to &quot;取出&quot;">​</a></h2><ul><li><strong>取出列表某个</strong>:</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git stash drop  statsh@{2}</span></span></code></pre></div><ul><li><strong>取出最后一个</strong>: 取出后会删除最后一个状态</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git stash pop</span></span></code></pre></div><h2 id="标签-tag" tabindex="-1">标签 tag <a class="header-anchor" href="#标签-tag" aria-label="Permalink to &quot;标签 tag&quot;">​</a></h2><h3 id="创建-1" tabindex="-1">创建 <a class="header-anchor" href="#创建-1" aria-label="Permalink to &quot;创建&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git tag &lt;tagname&gt; [ commit id ]  //默认为HEAD，也可以指定一个commit id</span></span></code></pre></div><ul><li><strong>-m 指定标签信息</strong></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git tag -a &lt;tagname&gt; -m &quot;blablabla...&quot;</span></span></code></pre></div><ul><li><strong>推送某个标签到远程</strong></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git push origin &lt;tagname&gt;</span></span></code></pre></div><ul><li><strong>推送全部标签到远程</strong></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git push origin --tags</span></span></code></pre></div><h3 id="查看-1" tabindex="-1">查看 <a class="header-anchor" href="#查看-1" aria-label="Permalink to &quot;查看&quot;">​</a></h3><ul><li><strong>全部</strong></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git tag -l</span></span></code></pre></div><ul><li><strong>tag 名称</strong></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git show &lt;tagname&gt;</span></span></code></pre></div><h3 id="删除" tabindex="-1">删除 <a class="header-anchor" href="#删除" aria-label="Permalink to &quot;删除&quot;">​</a></h3><ul><li><strong>本地</strong></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git tag -d v0.1</span></span></code></pre></div><ul><li><strong>远程</strong></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git tag -d v0.1</span></span>
<span class="line"><span>git push origin :refs/tags/v0.9</span></span></code></pre></div><h3 id="tag-other" tabindex="-1">tag other <a class="header-anchor" href="#tag-other" aria-label="Permalink to &quot;tag other&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git tag -l | xargs git tag -d #删除所有本地分支</span></span>
<span class="line"><span>git fetch origin --prune #从远程拉取所有信息</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#查询远程tags的命令如下：</span></span>
<span class="line"><span>git ls-remote --tags origin</span></span>
<span class="line"><span></span></span>
<span class="line"><span>tag常用git命令：</span></span>
<span class="line"><span>git tag #列出所有tag</span></span>
<span class="line"><span>git tag -l v1.* #列出符合条件的tag（筛选作用）</span></span>
<span class="line"><span>git tag [tag名] #创建轻量tag（无-m标注信息）</span></span>
<span class="line"><span>git tag -a [tag名] #创建含注解的tag</span></span>
<span class="line"><span></span></span>
<span class="line"><span>git push origin --tags #推送所有本地tag到远程</span></span>
<span class="line"><span>git push origin [本地tag名] #推送指定本地tag到远程</span></span>
<span class="line"><span></span></span>
<span class="line"><span>git tag -d [本地tag名] #删除本地指定tag</span></span>
<span class="line"><span>git push origin :refs/tags/[远程tag名] #删除远程指定tag</span></span>
<span class="line"><span></span></span>
<span class="line"><span>git fetch origin [远程tag名] #拉取远程指定tag</span></span>
<span class="line"><span>git show [tag名] #显示指定tag详细信息</span></span></code></pre></div><h2 id="别名" tabindex="-1">别名 <a class="header-anchor" href="#别名" aria-label="Permalink to &quot;别名&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git config —global alias.lg “log —color —graph —pretty=format:’%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset’ —abbrev-commit”</span></span></code></pre></div><h2 id="pull-push-配置项" tabindex="-1">pull push 配置项 <a class="header-anchor" href="#pull-push-配置项" aria-label="Permalink to &quot;pull push 配置项&quot;">​</a></h2><p>要把当前分支 push 和 pull 的默认分支设置为 dev</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git branch --set-upstream-to=origin/dev dev</span></span></code></pre></div><h2 id="未分类" tabindex="-1">未分类 <a class="header-anchor" href="#未分类" aria-label="Permalink to &quot;未分类&quot;">​</a></h2><h2 id="丢弃工作区文件修改" tabindex="-1">丢弃工作区文件修改 <a class="header-anchor" href="#丢弃工作区文件修改" aria-label="Permalink to &quot;丢弃工作区文件修改&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git checkout -- b.txt</span></span></code></pre></div><h2 id="暂存区修改放回工作区" tabindex="-1">暂存区修改放回工作区 <a class="header-anchor" href="#暂存区修改放回工作区" aria-label="Permalink to &quot;暂存区修改放回工作区&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git reset HEAD b.txt</span></span></code></pre></div><h2 id="将文件从缓存中删除-非物理" tabindex="-1">将文件从缓存中删除（非物理） <a class="header-anchor" href="#将文件从缓存中删除-非物理" aria-label="Permalink to &quot;将文件从缓存中删除（非物理）&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git rm --cached  &quot;文件路径&quot;</span></span></code></pre></div><h2 id="版本回退" tabindex="-1">版本回退 <a class="header-anchor" href="#版本回退" aria-label="Permalink to &quot;版本回退&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 显示最近300条提交记录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> log</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -300</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --hard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [commitID]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#强制提交</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#更简单的做法（回复上一个版本）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --hard</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HEAD~1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;xxx&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span></span></code></pre></div><h2 id="git-如何忽略本地文件-但这个文件要保存在远端库" tabindex="-1">git 如何忽略本地文件 , 但这个文件要保存在远端库 <a class="header-anchor" href="#git-如何忽略本地文件-但这个文件要保存在远端库" aria-label="Permalink to &quot;git 如何忽略本地文件 , 但这个文件要保存在远端库&quot;">​</a></h2><blockquote><p>git 在远端库有一个 web.config 的配置文件, 把这个库克隆到本地以后, 需要忽略这个配置文件的 push 和 pull . 应该怎样做?</p></blockquote><p>通常，远端库应该保存的是 web.config.example 这样的文件，然后开发者 clone 仓库下来，cp web.config.example web.config，再对 web.config 进行修改。而 web.config 是 git ignore 的。或者，你在本地执行 git update-index --assume-unchanged web.config，然后你就可以随意更改了。但当远端库的 web.config 更改时，你本地 pull 时会提示需要手动处理 web.config 文件（因为有 uncommitted 的内容），你可以先执行 git update-index --no-assume-unchanged web.config 把 changes 放出来，然后 stash 下... 然后 pull，然后解决冲突。</p><h2 id="别名-1" tabindex="-1">别名 <a class="header-anchor" href="#别名-1" aria-label="Permalink to &quot;别名&quot;">​</a></h2><p><a href="https://git-scm.com/book/zh/v2/Git-%E5%9F%BA%E7%A1%80-Git-%E5%88%AB%E5%90%8D" target="_blank" rel="noreferrer">官方文档</a></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#示例</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alias.mlog</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;log --oneline --graph&#39;</span></span></code></pre></div><h2 id="rebase-global-config" tabindex="-1">Rebase Global Config <a class="header-anchor" href="#rebase-global-config" aria-label="Permalink to &quot;Rebase Global Config&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># cat ~/.gitconfig</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull.ff</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull.rebase</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rebase.autoStash</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span></code></pre></div><h2 id="git-set-push-same-name" tabindex="-1">git set push same name <a class="header-anchor" href="#git-set-push-same-name" aria-label="Permalink to &quot;git set push same name&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push.default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> current</span></span></code></pre></div><h2 id="git-http-clone-set-username-and-password-to-git-config" tabindex="-1">git http clone set username and password to .git/config <a class="header-anchor" href="#git-http-clone-set-username-and-password-to-git-config" aria-label="Permalink to &quot;git http clone set username and password to .git/config&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[remote &quot;origin&quot;]</span></span>
<span class="line"><span>    url = https://username:password@github.com/user/repo.git</span></span>
<span class="line"><span>    fetch = +refs/heads/*:refs/remotes/origin/*</span></span></code></pre></div>`,93)]))}const k=s(n,[["render",l]]);export{c as __pageData,k as default};
