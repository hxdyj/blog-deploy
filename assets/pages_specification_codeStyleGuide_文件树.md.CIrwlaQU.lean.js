import{_ as n,c as a,a2 as p,o as e}from"./chunks/framework.DPDg7N6I.js";const g=JSON.parse('{"title":"文件树","description":"","frontmatter":{},"headers":[],"relativePath":"pages/specification/codeStyleGuide/文件树.md","filePath":"pages/specification/codeStyleGuide/文件树.md"}'),l={name:"pages/specification/codeStyleGuide/文件树.md"};function i(c,s,t,o,d,r){return e(),a("div",null,s[0]||(s[0]=[p(`<h1 id="文件树" tabindex="-1">文件树 <a class="header-anchor" href="#文件树" aria-label="Permalink to &quot;文件树&quot;">​</a></h1><h2 id="vue3-项目" tabindex="-1">Vue3 项目 <a class="header-anchor" href="#vue3-项目" aria-label="Permalink to &quot;Vue3 项目&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>/workspace/project</span></span>
<span class="line"><span>├── .husky                                        //规范 git commit msg</span></span>
<span class="line"><span>├── .vscode                                       //统一 vscode config</span></span>
<span class="line"><span>|  └── .settings.json</span></span>
<span class="line"><span>├── env                                           //区分环境变量</span></span>
<span class="line"><span>|  ├── .env</span></span>
<span class="line"><span>|  ├── .env.development</span></span>
<span class="line"><span>|  ├── .env.production</span></span>
<span class="line"><span>|  └── .env.staging</span></span>
<span class="line"><span>├── patches                                       //魔改第三方库</span></span>
<span class="line"><span>|  └── pdf-to-printer+5.1.1.patch</span></span>
<span class="line"><span>├── public                                        //公共文件</span></span>
<span class="line"><span>|  ├── favicon.ico</span></span>
<span class="line"><span>├── scripts                                       //脚本</span></span>
<span class="line"><span>├── src</span></span>
<span class="line"><span>|  ├── api.ts                                     //所有接口请求，以及接口接收及返回ts类型均在此文件定义。接口接收及返回type定义应该在此接口函数上方</span></span>
<span class="line"><span>|  ├── App.vue</span></span>
<span class="line"><span>|  ├── assets                                     //公共资源目录</span></span>
<span class="line"><span>|  |  ├── logo.png</span></span>
<span class="line"><span>|  ├── components                                 //公共组件目录</span></span>
<span class="line"><span>|  |  ├── BaseButton.vue</span></span>
<span class="line"><span>|  ├── config                                     //全局配置目录</span></span>
<span class="line"><span>|  |  ├── nodeEnv.ts</span></span>
<span class="line"><span>|  |  ├── config.ts</span></span>
<span class="line"><span>|  |  └── enum.ts</span></span>
<span class="line"><span>|  ├── extend.ts                                  //拓展原生文件</span></span>
<span class="line"><span>|  ├── main.ts                                    //vue 入口</span></span>
<span class="line"><span>|  ├── router                                     //路由</span></span>
<span class="line"><span>|  |  └── index.ts</span></span>
<span class="line"><span>|  ├── store                                      //vuex文件夹</span></span>
<span class="line"><span>|  |  ├── index.ts</span></span>
<span class="line"><span>|  |  └── vuexEnum.ts                             //vuex各项操作（state, action, getter）enum</span></span>
<span class="line"><span>|  ├── styles                                     //公共样式目录</span></span>
<span class="line"><span>|  |  ├── index.scss</span></span>
<span class="line"><span>|  ├── utils                                      //公共工具目录</span></span>
<span class="line"><span>|  |  ├── dom.ts</span></span>
<span class="line"><span>|  |  ├── download.ts</span></span>
<span class="line"><span>|  |  ├── http.ts</span></span>
<span class="line"><span>|  ├── views                                      //页面目录</span></span>
<span class="line"><span>|  |  ├── Home.vue</span></span>
<span class="line"><span>|  |  ├── Login</span></span>
<span class="line"><span>|  |  |  ├── Login.vue</span></span>
<span class="line"><span>|  |  |  └── img</span></span>
<span class="line"><span>|  |  |     ├── background.jpg</span></span>
<span class="line"><span>├── tsconfig.json</span></span>
<span class="line"><span>├── types                                       //公共ts类型声明目录</span></span>
<span class="line"><span>|  └── UserInfo.ts</span></span>
<span class="line"><span>├── typings                                       //.d.ts 声明目录</span></span>
<span class="line"><span>|  ├── env.d.ts</span></span>
<span class="line"><span>|  ├── shims-vue.d.ts</span></span>
<span class="line"><span>|  └── vite-env.d.ts</span></span>
<span class="line"><span>├── vite.config.ts                                //vite 配置文件</span></span>
<span class="line"><span>├── babel.config.js</span></span>
<span class="line"><span>├── index.html</span></span>
<span class="line"><span>├── package.json</span></span>
<span class="line"><span>├── postcss.config.js</span></span>
<span class="line"><span>├── .gitignore</span></span>
<span class="line"><span>├── .editorconfig</span></span>
<span class="line"><span>├── .eslintignore</span></span>
<span class="line"><span>├── .eslintrc.js</span></span>
<span class="line"><span>├── .prettierrc</span></span>
<span class="line"><span>├── TODO.md                                       //待完成清单</span></span>
<span class="line"><span>├── README.md</span></span>
<span class="line"><span>├── CHANGELOG.md                                  //更新日志</span></span></code></pre></div>`,3)]))}const v=n(l,[["render",i]]);export{g as __pageData,v as default};
