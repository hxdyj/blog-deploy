import{_ as i,c as a,a2 as n,o as h}from"./chunks/framework.DPDg7N6I.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"pages/windows/WSL.md","filePath":"pages/windows/WSL.md"}'),l={name:"pages/windows/WSL.md"};function t(p,s,k,e,r,d){return h(),a("div",null,s[0]||(s[0]=[n(`<h2 id="查看-ubuntu-里的-ip" tabindex="-1">查看 ubuntu 里的 ip <a class="header-anchor" href="#查看-ubuntu-里的-ip" aria-label="Permalink to &quot;查看 ubuntu 里的 ip&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># or ip addr show</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span></span></code></pre></div><h2 id="wsl-端口映射到主机" tabindex="-1">wsl 端口映射到主机 <a class="header-anchor" href="#wsl-端口映射到主机" aria-label="Permalink to &quot;wsl 端口映射到主机&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  devServer: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    host: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;0.0.0.0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 监听所有IP地址，包括局域网IP</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    port: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8080</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置服务的端口号</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    disableHostCheck: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 禁用主机检查（开发环境中可以使用）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ip addr show eth0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">netsh interface portproxy </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v4tov4 listenport</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8080</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> listenaddress</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0.0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> connectport</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8080</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> connectaddress</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WSL_IP_ADDRESS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#查看所有代理了的端口</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">netsh interface portproxy show all</span></span></code></pre></div><h3 id="开启自动映射-wsl-端口到主机" tabindex="-1">开启自动映射 wsl 端口到主机 <a class="header-anchor" href="#开启自动映射-wsl-端口到主机" aria-label="Permalink to &quot;开启自动映射 wsl 端口到主机&quot;">​</a></h3><p>创建<code>setup_wsl_portproxy.bat</code>文件添加到开机目录 <code>C:\\Users\\【your user】\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup</code></p><div class="language-bat vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bat</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@echo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> off</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">REM</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Start WSL</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Starting WSL...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">wsl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -d Ubuntu-22.04 -e </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WSL is now started</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">REM</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Function to get WSL IP address</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GET_WSL_IP</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /f </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tokens=*&quot;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> %%i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (&#39;powershell.exe -Command </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;(wsl -e ip -4 addr show eth0 | Select-String -Pattern &#39;inet\\s+(\\d+\\.\\d+\\.\\d+\\.\\d+)&#39; ).Matches.Groups[1].Value&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&#39;) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> wsl_ip</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">%%i</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">REM</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Check if WSL IP is empty</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">%wsl_ip%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Waiting for WSL to start...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    timeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /t </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nul</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    goto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GET_WSL_IP</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">REM</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Configure port forwarding</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">netsh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> interface portproxy delete v4tov4 listenport=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5003</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> listenaddress=0.0.0.0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">netsh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> interface portproxy add v4tov4 listenport=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5003</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> listenaddress=0.0.0.0 connectport=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5003</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> connectaddress=%wsl_ip%</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">netsh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> interface portproxy delete v4tov4 listenport=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3006</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> listenaddress=0.0.0.0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">netsh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> interface portproxy add v4tov4 listenport=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3006</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> listenaddress=0.0.0.0 connectport=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3006</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> connectaddress=%wsl_ip%</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Port forwarding set for IP %wsl_ip%</span></span></code></pre></div><h2 id="mysql-代理" tabindex="-1">mysql 代理 <a class="header-anchor" href="#mysql-代理" aria-label="Permalink to &quot;mysql 代理&quot;">​</a></h2><ol><li>确认 MySQL 在 Windows 上允许远程访问：</li></ol><p>默认情况下，MySQL 可能只监听 localhost。你需要确保 MySQL 配置为监听所有 IP 地址。</p><ul><li><p>打开 MySQL 的配置文件（通常是 my.ini 或 my.cnf），文件位置可能在 C:\\ProgramData\\MySQL\\MySQL Server 8.0\\my.ini 或 C:\\Program Files\\MySQL\\MySQL Server 8.0\\my.ini。</p></li><li><p>找到 [mysqld] 部分，确保有以下配置项：</p></li></ul><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bind-address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 0.0.0.0</span></span></code></pre></div><ul><li>保存文件并重启 MySQL 服务。</li></ul><ol start="2"><li>创建允许远程访问的 MySQL 用户： 打开 MySQL 命令行客户端，使用具有足够权限的账户登录，并执行以下 SQL 命令：</li></ol><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> USER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">your_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&#39;@</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IDENTIFIED </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;your_password&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GRANT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ALL PRIVILEGES </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ON</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;root&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FLUSH PRIVILEGES;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SHOW GRANTS </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FOR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;root&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><ol start="3"><li>在 WSL 中安装 MySQL 客户端：</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysql-client</span></span></code></pre></div><ol start="4"><li>重启 MySQL 服务</li></ol><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># MySQL80 替换成自己的mysql服务名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Restart</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Service </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Name </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&#39;MySQL80&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">or</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> use below shell</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># net stop MYSQL57</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># net start MYSQL57</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 查询window服务 TODO grep</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sc query type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> service state</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> all | findstr </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MySQL&quot;</span></span></code></pre></div><h2 id="wsl-clash-proxy" tabindex="-1">wsl clash proxy <a class="header-anchor" href="#wsl-clash-proxy" aria-label="Permalink to &quot;wsl clash proxy&quot;">​</a></h2><p><a href="https://gist.github.com/libChan/3a804a46b532cc326a2ee55b27e8ac19?open_in_browser=true" target="_blank" rel="noreferrer">link</a></p><ul><li><p>WSL 通过 Win 访问网络，所以 WSL 的网关指向的是 Windows，DNS 服务器指向的也是 Windows，设置 WSL 的 proxy 为 win 的代理 ip+端口即可</p></li><li><p>WSL 中的 DNS server 在/etc/resolv.conf 中查看，该文件是由/etc/wsl.conf 自动生成的。</p></li><li><p>如果关闭了 wsl.conf 中自动生成 resolve.conf 并自行修改了 resolve.conf，DNS nameserver 并不是本机 win ip</p></li><li><p>需要开启 wsl.conf 的自动生成，再运行以下命令</p></li><li><p><a href="https://zhuanlan.zhihu.com/p/153124468" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/153124468</a></p></li><li><p>添加到环境变量设置中，例如~/.zshrc</p></li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 定义一个函数来设置WSL代理</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_proxies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 获取 IPv4 地址并去除前后的空白字符</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    hostip</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">powershell.exe</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Command</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;ipconfig&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> awk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;/IPv4/{print $NF}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> tail</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> tr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;[:space:]&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> tr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;\\n&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> tr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;\\r&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 等待 hostip 变量被赋值后再设置代理</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$hostip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> https_proxy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$hostip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:7890&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 主机IP:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $hostip</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Proxy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> URL：</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$https_proxy</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> http_proxy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$hostip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:7890&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> all_proxy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;socks5://</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$hostip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:7890&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> no_proxy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;localhost,127.0.0.1,::1,192.168.1.32&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    else</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Failed to get hostip&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    fi</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_proxies</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 注意： clash 需要开启 Allow Lan</span></span></code></pre></div>`,24)]))}const y=i(l,[["render",t]]);export{g as __pageData,y as default};
