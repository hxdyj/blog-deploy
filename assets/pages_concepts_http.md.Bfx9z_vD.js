import{_ as e,c as s,a2 as t,o as n}from"./chunks/framework.DPDg7N6I.js";const S=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"pages/concepts/http.md","filePath":"pages/concepts/http.md"}'),p={name:"pages/concepts/http.md"};function i(r,a,o,c,l,d){return n(),s("div",null,a[0]||(a[0]=[t(`<h2 id="_307-hsts-重定向" tabindex="-1">307 HSTS 重定向 <a class="header-anchor" href="#_307-hsts-重定向" aria-label="Permalink to &quot;307 HSTS 重定向&quot;">​</a></h2><h3 id="了解-hsts" tabindex="-1">了解 HSTS <a class="header-anchor" href="#了解-hsts" aria-label="Permalink to &quot;了解 HSTS&quot;">​</a></h3><p>HSTS(HTTP Strict Transport Security)。它告诉浏览器只能通过 HTTPS 访问当前资源，而不是 HTTP。</p><p>现代浏览器和服务器都开始支持 HSTS(HTTP Strict Transport Security) 功能，即自动将不安全的 HTTP 请求使用 307 Internal Redirect 跳转到 HTTPS 请求。这是由 Chrome 内部 HSTS 缓存导致的。Chrome 会自动记住每个域的 HSTS 设置，也就是说 HSTS 只要在理论上的第一次暴露后，后来就不经网页服务器返回，浏览器会查询本地数据，直接伪造 HSTS 307 跳转到安全的 HTTPS，以此来加强网络访问的安全性。</p><p>问题是，是谁告诉浏览器这么做的呢？ 原因是在 nginx 配置中有这么一段：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>add_header Strict-Transport-Security max-age=31622400;</span></span></code></pre></div><p>这里意思是通知浏览器，访问的这个域名需要采用 HSTS 策略，并且过期时间是 31622400 秒(一年)，在这一年中都需要使用 HSTS 策略，意味着发起 http 请求时，浏览器都会强行进行 307 内部跳转。</p><p>然后因为 307 跳转被 cors 预检请求认为是不合法的，故此预检失败：</p><h3 id="解决方案" tabindex="-1">解决方案 <a class="header-anchor" href="#解决方案" aria-label="Permalink to &quot;解决方案&quot;">​</a></h3><ol><li>将 nginx 中配置的 Strict-Transport-Security 注释 或者 时间设为 0</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>server {undefined</span></span>
<span class="line"><span>listen 443 ssl;</span></span>
<span class="line"><span>server_name www.example.com;</span></span>
<span class="line"><span>#add_header Strict-Transport-Security &quot;max-age=31536000;</span></span>
<span class="line"><span>add_header Strict-Transport-Security &quot;max-age=0;</span></span>
<span class="line"><span>}</span></span></code></pre></div><ol start="2"><li>chrome://net-internals/#hsts</li></ol><p>delete domain security plicies www.example.com</p>`,13)]))}const T=e(p,[["render",i]]);export{S as __pageData,T as default};
